# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: acrsysdesign.azurecr.io/useradmin
  tag: latest
  # This sets the pull policy for images.
  pullPolicy: Always

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: "blips-useradmin"

# Environment variables
env: {}

serviceAccount:
  create: true
  name: useradmin-sa
  annotations:
    azure.workload.identity/client-id: ""
    #azure.workload.identity/inject: "true"

podLabels:
  azure.workload.identity/use: "true" 

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    add:
    - NET_BIND_SERVICE
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service
service:
  # This sets the service type
  type: ClusterIP
  # This sets the ports 
  port: 443

# This block is for setting up the ingress 
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "false"  # Force HTTP to HTTPS redirection
    appgw.ingress.kubernetes.io/use-private-ip: "false"  # Use public IP (set to "true" if private IP needed)
    appgw.ingress.kubernetes.io/backend-protocol: "https"  # Backend is HTTPS on port 443
    appgw.ingress.kubernetes.io/backend-hostname: "useradmin.blips.service"
    appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "aks-root-ca"  # Use the root CA for TLS termination
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "appGwSslCert" # Use the SSL certificate from Key Vault
  hosts:
    - host: useradmin.blips.service
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            serviceName: blips-useradmin
            servicePort: 443
  tls:
    - secretName: useradmin-tls-secret
      hosts:
        - useradmin.blips.service

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes
livenessProbe:
  httpGet:
    path: /health/live
    port: 443
    scheme: HTTPS
  initialDelaySeconds: 15
  periodSeconds: 5
readinessProbe:
  httpGet:
    path: /health/ready
    port: 443
    scheme: HTTPS
  initialDelaySeconds: 15
  periodSeconds: 5

# This section is for setting up autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

azureTenantId: "35d231ad-d70d-43bf-bc50-c2e8bbc10537"
azureWorkloadIdentity:
  clientId: ""

keyvault:
  name: kv-primary-sysdesign
  # secretObjects:  # Sync Key Vault cert to Kubernetes Secret for Ingress
  #   - secretName: useradmin-tls-secret
  #     type: kubernetes.io/tls
  #     data:
  #       - objectName: azure-aks-appgw-pfx-base64
  #         key: tls.crt
  #       - objectName: azure-aks-appgw-pfx-base64
  #         key: tls.key

volumes:
  - name: kv-secrets
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: useradmin-kv

volumeMounts:
  - name: kv-secrets
    mountPath: /mnt/secrets
    readOnly: true


nodeSelector: {}

tolerations: []

affinity: {}